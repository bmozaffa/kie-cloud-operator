console:
  serviceAccounts:
    - metadata:
        name: "{{.ApplicationName}}-rhpamsvc"
        labels:
          app: "{{.ApplicationName}}"
  rolebindings:
    - metadata:
        name: "{{.ApplicationName}}-rhpamsvc-view"
      subjects:
        - kind: ServiceAccount
          name: "{{.ApplicationName}}-rhpamsvc"
      roleRef:
        kind: Role
        name: view
  deploymentConfigs:
    - metadata:
        name: "{{.ApplicationName}}-rhpamcentr"
        labels:
          app: "{{.ApplicationName}}"
          service: "{{.ApplicationName}}-rhpamcentr"
        annotations:
          template.alpha.openshift.io/wait-for-ready: "true"
      spec:
        strategy:
          type: Recreate
        triggers:
          - type: ImageChange
            imageChangeParams:
              automatic: true
              containerNames:
                - "{{.ApplicationName}}-rhpamcentr"
              from:
                kind: ImageStreamTag
                namespace: "openshift"
                name: "rhpam{{.Version}}-businesscentral-openshift:{{.ImageTag}}"
          - type: ConfigChange
        replicas: 1
        selector:
          deploymentConfig: "{{.ApplicationName}}-rhpamcentr"
        template:
          metadata:
            name: "{{.ApplicationName}}-rhpamcentr"
            labels:
              deploymentConfig: "{{.ApplicationName}}-rhpamcentr"
              app: "{{.ApplicationName}}"
              service: "{{.ApplicationName}}-rhpamcentr"
          spec:
            serviceAccountName: "{{.ApplicationName}}-rhpamsvc"
            terminationGracePeriodSeconds: 60
            containers:
              - name: "{{.ApplicationName}}-rhpamcentr"
                image: rhpam{{.Version}}-businesscentral-openshift
                imagePullPolicy: Always
                resources:
                  requests:
                    memory: 768Mi
                  limits:
                    memory: 1Gi
                livenessProbe:
                  exec:
                    command:
                      - "/bin/bash"
                      - "-c"
                      - curl --fail --silent -u "$KIE_ADMIN_USER":"$KIE_ADMIN_PWD" http://localhost:8080/kie-wb.jsp
                  initialDelaySeconds: 180
                  timeoutSeconds: 2
                  periodSeconds: 15
                readinessProbe:
                  exec:
                    command:
                      - "/bin/bash"
                      - "-c"
                      - curl --fail --silent -u "$KIE_ADMIN_USER":"$KIE_ADMIN_PWD" http://localhost:8080/kie-wb.jsp
                  initialDelaySeconds: 60
                  timeoutSeconds: 2
                  periodSeconds: 30
                  failureThreshold: 6
                ports:
                  - name: jolokia
                    containerPort: 8778
                    protocol: TCP
                  - name: http
                    containerPort: 8080
                    protocol: TCP
                  - name: https
                    containerPort: 8443
                    protocol: TCP
                  - name: ping
                    containerPort: 8888
                    protocol: TCP
                env:
                  - name: KIE_MAVEN_USER
                    value: mavenUser
                  - name: KIE_MAVEN_PWD
                    value: "{{.MavenPassword}}"
                  - name: KIE_MBEANS
                    value: enabled
                  - name: HTTPS_KEYSTORE_DIR
                    value: "/etc/businesscentral-secret-volume"
                  - name: HTTPS_KEYSTORE
                    value: "keystore.jks"
                  - name: HTTPS_NAME
                    value: "jboss"
                  - name: HTTPS_PASSWORD
                    value: "{{.KeyStorePassword}}"
                  - name: WORKBENCH_ROUTE_NAME
                    value: "{{.ApplicationName}}-rhpamcentr"
                  - name: JGROUPS_PING_PROTOCOL
                    value: "openshift.DNS_PING"
                  - name: OPENSHIFT_DNS_PING_SERVICE_NAME
                    value: "{{.ApplicationName}}-rhpamcentr-ping"
                  - name: OPENSHIFT_DNS_PING_SERVICE_PORT
                    value: "8888"
                  - name: SSO_URL
                    value: ""
                  - name: SSO_OPENIDCONNECT_DEPLOYMENTS
                    value: "ROOT.war"
                  - name: SSO_REALM
                    value: ""
                  - name: SSO_SECRET
                    value: ""
                  - name: SSO_CLIENT
                    value: ""
                  - name: SSO_USERNAME
                    value: ""
                  - name: SSO_PASSWORD
                    value: ""
                  - name: SSO_DISABLE_SSL_CERTIFICATE_VALIDATION
                    value: "false"
                  - name: SSO_PRINCIPAL_ATTRIBUTE
                    value: "preferred_username"
                  - name: HOSTNAME_HTTP
                    value: ""
                  - name: HOSTNAME_HTTPS
                    value: ""
                  - name: AUTH_LDAP_URL
                    value: ""
                  - name: AUTH_LDAP_BIND_DN
                    value: ""
                  - name: AUTH_LDAP_BIND_CREDENTIAL
                    value: ""
                  - name: AUTH_LDAP_JAAS_SECURITY_DOMAIN
                    value: ""
                  - name: AUTH_LDAP_BASE_CTX_DN
                    value: ""
                  - name: AUTH_LDAP_BASE_FILTER
                    value: ""
                  - name: AUTH_LDAP_SEARCH_SCOPE
                    value: ""
                  - name: AUTH_LDAP_SEARCH_TIME_LIMIT
                    value: ""
                  - name: AUTH_LDAP_DISTINGUISHED_NAME_ATTRIBUTE
                    value: ""
                  - name: AUTH_LDAP_PARSE_USERNAME
                    value: ""
                  - name: AUTH_LDAP_USERNAME_BEGIN_STRING
                    value: ""
                  - name: AUTH_LDAP_USERNAME_END_STRING
                    value: ""
                  - name: AUTH_LDAP_ROLE_ATTRIBUTE_ID
                    value: ""
                  - name: AUTH_LDAP_ROLES_CTX_DN
                    value: ""
                  - name: AUTH_LDAP_ROLE_FILTER
                    value: ""
                  - name: AUTH_LDAP_ROLE_RECURSION
                    value: ""
                  - name: AUTH_LDAP_DEFAULT_ROLE
                    value: ""
                  - name: AUTH_LDAP_ROLE_NAME_ATTRIBUTE_ID
                    value: ""
                  - name: AUTH_LDAP_PARSE_ROLE_NAME_FROM_DN
                    value: ""
                  - name: AUTH_LDAP_ROLE_ATTRIBUTE_IS_DN
                    value: ""
                  - name: AUTH_LDAP_REFERRAL_USER_ATTRIBUTE_ID_TO_CHECK
                    value: ""
  services:
    - spec:
        ports:
          - name: http
            port: 8080
            targetPort: 8080
          - name: https
            port: 8443
            targetPort: 8443
        selector:
          deploymentConfig: "{{.ApplicationName}}-rhpamcentr"
      metadata:
        name: "{{.ApplicationName}}-rhpamcentr"
        labels:
          app: "{{.ApplicationName}}"
          service: "{{.ApplicationName}}-rhpamcentr"
        annotations:
          description: All the Business Central web server's ports.
    - spec:
        clusterIP: "None"
        ports:
          - name: "ping"
            port: 8888
            targetPort: 8888
        selector:
          deploymentConfig: "{{.ApplicationName}}-rhpamcentr"
      metadata:
        name: "{{.ApplicationName}}-rhpamcentr-ping"
        labels:
          app: "{{.ApplicationName}}"
          service: "{{.ApplicationName}}-rhpamcentr"
        annotations:
          service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
          description: "The JGroups ping port for clustering."
  routes:
    - id: "{{.ApplicationName}}-rhpamcentr-https"
      metadata:
        name: "{{.ApplicationName}}-rhpamcentr-https"
        labels:
          app: "{{.ApplicationName}}"
          service: "{{.ApplicationName}}-rhpamcentr"
        annotations:
          description: Route for Business Central's https service.
          haproxy.router.openshift.io/timeout: 60s
      spec:
        host: ""
        to:
          name: "{{.ApplicationName}}-rhpamcentr"
        port:
          targetPort: https
        tls:
          insecureEdgeTerminationPolicy: Redirect
          termination: passthrough
  persistentVolumeClaims:
    - metadata:
        name: "{{.ApplicationName}}-rhpamcentr-claim"
        labels:
          app: "{{.ApplicationName}}"
          service: "{{.ApplicationName}}-rhpamcentr"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi


## KIE Servers BEGIN
servers:
## RANGE BEGINS
  {{ range $index, $Map := .ServerCount }}
- persistentVolumeClaims:
    ## H2 persistent volume claim BEGIN
    - metadata:
        name: "{{.ApplicationName}}-h2-claim-{{$index}}"
        labels:
          app: "{{.ApplicationName}}"
          service: "{{.ApplicationName}}-kieserver-{{$index}}"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "1Gi"
    ## H2 persistent volume claim END
  ## KIE server deployment config BEGIN
  deploymentConfigs:
    - metadata:
        name: "{{.ApplicationName}}-kieserver-{{$index}}"
        labels:
          app: "{{.ApplicationName}}-kieserver-{{$index}}"
          application: "{{.ApplicationName}}"
          service: "{{.ApplicationName}}-kieserver"
        annotations:
          template.alpha.openshift.io/wait-for-ready: "true"
      spec:
        strategy:
          type: Recreate
        triggers:
          - type: ImageChange
            imageChangeParams:
              automatic: true
              containerNames:
                - "{{.ApplicationName}}-kieserver"
              from:
                kind: ImageStreamTag
                namespace: "openshift"
                name: "rhpam{{.Version}}-kieserver-openshift:{{.ImageTag}}"
          - type: ConfigChange
        replicas: 3
        selector:
          deploymentConfig: "{{.ApplicationName}}-kieserver-{{$index}}"
        template:
          metadata:
            name: "{{.ApplicationName}}-kieserver-{{$index}}"
            labels:
              app: "{{.ApplicationName}}-kieserver-{{$index}}"
              application: "{{.ApplicationName}}"
              service: "{{.ApplicationName}}-kieserver"
              deploymentConfig: "{{.ApplicationName}}-kieserver-{{$index}}"
          spec:
            serviceAccountName: "{{.ApplicationName}}-rhpamsvc"
            terminationGracePeriodSeconds: 60
            containers:
              - name: "{{.ApplicationName}}-kieserver"
                image: "rhpam{{.Version}}-kieserver-openshift"
                imagePullPolicy: Always
                env:
                  - name: KIE_ADMIN_USER
                    value: adminUser
                  - name: KIE_ADMIN_PWD
                    value: "{{.AdminPassword}}"
                  - name: KIE_SERVER_USER
                    value: executionUser
                  - name: KIE_SERVER_PWD
                    value: "{{.ServerPassword}}"
                  - name: DROOLS_SERVER_FILTER_CLASSES
                    value: "true"
                  - name: KIE_SERVER_CONTROLLER_USER
                    value: controllerUser
                  - name: KIE_SERVER_CONTROLLER_PWD
                    value: "{{.ControllerPassword}}"
                  - name: KIE_SERVER_CONTROLLER_SERVICE
                    value: "{{.ApplicationName}}-rhpamcentr"
                  - name: KIE_SERVER_CONTROLLER_PROTOCOL
                    value: ws
                  - name: KIE_MBEANS
                    value: enabled
                  - name: KIE_SERVER_ID
                    value: "{{.ApplicationName}}-kieserver-{{$index}}"
                  - name: MAVEN_REPOS
                    value: EXTERNAL
                  - name: SSO_OPENIDCONNECT_DEPLOYMENTS
                    value: ROOT.war
                  - name: KIE_SERVER_BYPASS_AUTH_USER
                    value: "false"
                  - name: HTTPS_KEYSTORE_DIR
                    value: "/etc/kieserver-secret-volume"
                  - name: HTTPS_KEYSTORE
                    value: "keystore.jks"
                  - name: HTTPS_NAME
                    value: "jboss"
                  - name: HTTPS_PASSWORD
                    value: "{{.KeyStorePassword}}"
                  - name: DATASOURCES
                    value: "RHPAM"
                  - name: RHPAM_DATABASE
                    value: "rhpam7"
                  - name: RHPAM_JNDI
                    value: "java:/jboss/datasources/rhpam"
                  - name: RHPAM_JTA
                    value: "true"
                  - name: KIE_SERVER_PERSISTENCE_DS
                    value: "java:/jboss/datasources/rhpam"
                  ## H2 driver settings BEGIN
                  - name: RHPAM_DRIVER
                    value: "h2"
                  - name: RHPAM_USERNAME
                    value: "sa"
                  - name: RHPAM_PASSWORD
                    value: "{{.AdminPassword}}"
                  - name: RHPAM_XA_CONNECTION_PROPERTY_URL
                    value: "jdbc:h2:/opt/eap/standalone/data/rhpam"
                  - name: RHPAM_SERVICE_HOST
                    value: "dummy_ignored"
                  - name: RHPAM_SERVICE_PORT
                    value: "12345"
                  - name: KIE_SERVER_PERSISTENCE_DIALECT
                    value: "org.hibernate.dialect.H2Dialect"
                  - name: DROOLS_SERVER_FILTER_CLASSES
                    value: "true"
                ## H2 driver settings END
                resources:
                  limits:
                    memory: 1Gi
                livenessProbe:
                  exec:
                    command:
                      - "/bin/bash"
                      - "-c"
                      - curl --fail --silent -u "$KIE_ADMIN_USER":"$KIE_ADMIN_PWD" http://localhost:8080/services/rest/server/healthcheck
                  initialDelaySeconds: 180
                  timeoutSeconds: 2
                  periodSeconds: 15
                  failureThreshold: 3
                readinessProbe:
                  exec:
                    command:
                      - "/bin/bash"
                      - "-c"
                      - curl --fail --silent -u "$KIE_ADMIN_USER":"$KIE_ADMIN_PWD" http://localhost:8080/services/rest/server/readycheck
                  initialDelaySeconds: 60
                  timeoutSeconds: 2
                  periodSeconds: 30
                  failureThreshold: 6
                ports:
                  - name: jolokia
                    containerPort: 8778
                    protocol: TCP
                  - name: http
                    containerPort: 8080
                    protocol: TCP
                  - name: https
                    containerPort: 8443
                    protocol: TCP
            ## H2 volume settings END
    ## KIE server deployment config END
  ## KIE server services BEGIN
  services:
    - spec:
        ports:
          - name: http
            port: 8080
            targetPort: 8080
          - name: https
            port: 8443
            targetPort: 8443
        selector:
          deploymentConfig: "{{.ApplicationName}}-kieserver-{{$index}}"
      metadata:
        name: "{{.ApplicationName}}-kieserver-{{$index}}"
        labels:
          app: "{{.ApplicationName}}-kieserver-{{$index}}"
          application: "{{.ApplicationName}}"
          service: "{{.ApplicationName}}-kieserver"
        annotations:
          description: All the KIE server web server's ports. (KIE server)
    - spec:
        clusterIP: "None"
        ports:
          - name: "ping"
            port: 8888
            targetPort: 8888
        selector:
          deploymentConfig: "{{.ApplicationName}}-kieserver-{{$index}}"
      metadata:
        name: "{{.ApplicationName}}-kieserver-{{$index}}-ping"
        labels:
          app: "{{.ApplicationName}}-kieserver-{{$index}}"
          application: "{{.ApplicationName}}"
          service: "{{.ApplicationName}}-kieserver"
        annotations:
          service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
          description: "The JGroups ping port for clustering."
    ## KIE server services END
  ## KIE server routes BEGIN
  routes:
    - id: "{{.ApplicationName}}-kieserver-{{$index}}-https"
      metadata:
        name: "{{.ApplicationName}}-kieserver-{{$index}}"
        labels:
          app: "{{.ApplicationName}}-kieserver-{{$index}}"
          application: "{{.ApplicationName}}"
          service: "{{.ApplicationName}}-kieserver"
        annotations:
          description: Route for KIE server's https service.
      spec:
        to:
          name: "{{.ApplicationName}}-kieserver-{{$index}}"
        port:
          targetPort: https
        tls:
          insecureEdgeTerminationPolicy: Redirect
          termination: passthrough
  ## KIE server routes END
    {{end}}
## RANGE ends
## KIE Servers END