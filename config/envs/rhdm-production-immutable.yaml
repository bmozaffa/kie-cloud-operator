## KIE smartrouter BEGIN
smartrouter:
  omit: true
## KIE smartrouter END
## KIE Servers BEGIN
servers:
  ## RANGE BEGINS
  #{{ range $index, $Map := .Servers }}
  ## KIE server deployment config BEGIN
  - deploymentConfigs:
      - metadata:
          name: "{{.KieName}}-kieserver-{{$index}}"
          labels:
            app: "{{$.ApplicationName}}"
            application: "{{$.ApplicationName}}"
            service: "{{.KieName}}-kieserver-{{$index}}"
        spec:
          replicas: 2
          template:
            spec:
              containers:
                - name: "{{.KieName}}-kieserver-{{$index}}"
                  image: "{{.KieName}}-kieserver-{{$index}}"
                  env:
                    - name: KIE_SERVER_CONTAINER_DEPLOYMENT
                      value: "{{.Build.KieServerContainerDeployment}}"
                    - name: KIE_SERVER_MGMT_DISABLED
                      value: "true"
                    - name: KIE_SERVER_STARTUP_STRATEGY
                      value: LocalContainersStartupStrategy
                    - name: "{{$.MavenRepo}}_MAVEN_REPO_USERNAME"
                      value: ""
                    - name: "{{$.MavenRepo}}_MAVEN_REPO_PASSWORD"
                      value: ""
                    - name: "{{$.MavenRepo}}_MAVEN_REPO_SERVICE"
                      value: ""
                    - name: MAVEN_REPOS
                      value: "EXTERNAL"

      ## KIE server deployment config END
    ## KIE server build config BEGIN
    #{{if .Build.KieServerContainerDeployment}}
    imageStreams:
      - metadata:
          name: "{{.KieName}}-kieserver-{{$index}}"
          labels:
            app: "{{$.ApplicationName}}"
            application: "{{$.ApplicationName}}"
            service: "{{.KieName}}-kieserver-{{$index}}"
    buildConfigs:
      - metadata:
          name: "{{.KieName}}-kieserver-{{$index}}"
          labels:
            app: "{{$.ApplicationName}}"
            application: "{{$.ApplicationName}}"
            service: "{{.KieName}}-kieserver-{{$index}}"
        spec:
          source:
            type: Git
            git:
              uri: "{{.Build.GitSource.URI}}"
              ref: "{{.Build.GitSource.Reference}}"
            contextDir: "{{.Build.GitSource.ContextDir}}"
          strategy:
            type: Source
            sourceStrategy:
              env:
                - name: KIE_SERVER_CONTAINER_DEPLOYMENT
                  value: "{{.Build.KieServerContainerDeployment}}"
                - name: MAVEN_MIRROR_URL
                  value: "{{.Build.MavenMirrorURL}}"
                - name: ARTIFACT_DIR
                  value: "{{.Build.ArtifactDir}}"
              forcePull: true
              from:
                kind: "{{.Build.From.Kind}}"
                namespace: "{{.Build.From.Namespace}}"
                name: "{{.Build.From.Name}}"
          output:
            to:
              kind: ImageStreamTag
              name: "{{.KieName}}-kieserver-{{$index}}:latest"
          triggers:
            - type: GitHub
              github:
                secret: "{{.Build.GitHubWebhookSecret}}"
            - type: Generic
              generic:
                secret: "{{.Build.GenericWebhookSecret}}"
            - type: ImageChange
              imageChange: {}
            - type: ConfigChange
    #{{end}}
    ## KIE server build config END
#{{end}}
## RANGE ends
## KIE Servers END
